# -*- coding: utf-8 -*-
"""дз3-4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f0CHuMPnvuhIC0uYAuYd_cMvk5YtYZ2K
"""

Домашнее задание №18

Домашнее задание к вебинару «Библиотеки машинного обучения»


Сгенерируйте искусственные данные(один признак и одна целевая переменная) и разделите данные на обучающую и тестовую выборки(функция train_test_split)
Пример генерации данных:
np.random.seed(42)
X = 2 * np.random.rand(100, 1)  # один признак
y = 4 + 3 * X + np.random.randn(100, 1)  # целевая переменная с небольшим шумом

Создайте и обучите модель линейной регрессии, после чего сделайте предсказания
Постройте точечные графики исходных данных(выделите тестовые и обучающие данные разным цветом) и график линии регрессии, где по оси абсцисс - признак, по оси ординат - целевая переменная. Все это должно быть на одних осях

import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Генерация искусственных данных
np.random.seed(42)
X = 2 * np.random.rand(100, 1)  # один признак
y = 4 + 3 * X + np.random.randn(100, 1)  # целевая переменная с небольшим шумом

# Разделение данных на обучающую и тестовую выборки
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Создание и обучение модели линейной регрессии
model = LinearRegression()
model.fit(X_train, y_train)

# Предсказания для тестового набра
y_pred = model.predict(X_test)

# Построение точечного графика
plt.scatter(X_train, y_train, color='blue', label='Обучающий набор')
plt.scatter(X_test, y_test, color='red', label='Тестовый набор')
plt.plot(X, model.predict(X), color='green', label='Линейная регрессии')
plt.xlabel('Признак')
plt.ylabel('Целевая переменная')
plt.legend()
plt.show()